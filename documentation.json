{
    "pipes": [],
    "interfaces": [],
    "injectables": [
        {
            "name": "InstantUiLibraryService",
            "id": "injectable-InstantUiLibraryService-6d62d307de6f12924e3a4b55f974319c7539207a435ac92374603c4ead2c7f1e526c59f5f8285feeaa2e27560a845f27488fc6aeb8138f45abfdf5408904b21c",
            "file": "projects/instant-ui-library/src/lib/root/instant-ui-library.service.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class InstantUiLibraryService {\n  constructor() {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 6
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-022535edd5d5601cce958148c6cde9a42443ccb0ee18a205a1d1c84ce693d05d2b880d013710779b5b58222a22d773abe71da6f2182e6a97ef936d8d0eae715f",
            "file": "projects/instant-ui-showcase/src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "click",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "title",
                    "defaultValue": "'instant-ui-showcase'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'instant-ui-showcase';\n  click = () => {\n    console.log('Button');\n  };\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  text-align: center;\n  justify-content: center;\n  display: flex;\n}\n",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<iu-root>\n  <iu-text-area></iu-text-area>\n  <iu-loading-spinner id=\"1\" variant=\"primary\"></iu-loading-spinner>\n  <iu-button text=\"Click\" (onClick)=\"click()\" [loading]=\"true\"></iu-button>\n</iu-root>\n"
        },
        {
            "name": "BaseButtonComponent",
            "id": "component-BaseButtonComponent-2437c897d5cd6869511111f4932b0791724ce9e76851e8b7445438e8a5b5f06db98ff81cb73e66db499a6d7b718923977eb2d7d3fffdaf2feea879e01f675fb8",
            "file": "projects/instant-ui-library/src/lib/button/base-button/base-button.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "iu-button[onClick][text]",
            "styleUrls": [
                "./base-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./base-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "disabledMessage",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "redirect",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "\"submit\" | \"reset\" | \"button\"",
                    "decorators": []
                },
                {
                    "name": "variant",
                    "defaultValue": "Mode.PRIMARY",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "ModeType",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<null>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "EventEmitter<>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "handleOnClick",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "mode",
                    "defaultValue": "Mode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  ChangeDetectionStrategy,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n} from '@angular/core';\nimport { Mode, ModeType } from '../../shared/models/color.model';\n\n@Component({\n  selector: 'iu-button[onClick][text]',\n  templateUrl: './base-button.component.html',\n  styleUrls: ['./base-button.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BaseButtonComponent implements OnChanges {\n  constructor() {}\n  @Input() text: string;\n  @Input() title: string;\n  @Input() type: 'submit' | 'reset' | 'button' = 'button';\n  @Input() variant: ModeType = Mode.PRIMARY;\n  @Input() disabled: boolean = false;\n  @Input() disabledMessage: string = '';\n  @Input() redirect: string = '';\n  @Input() loading: boolean = false;\n  @Output() onClick: EventEmitter<null> = new EventEmitter<null>();\n  mode = Mode;\n\n  ngOnChanges(): void {\n    if (!this.title || !this.text) {\n      this.title = this.text;\n    }\n  }\n\n  handleOnClick = () => {\n    this.onClick.emit(null);\n  };\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../styles/global.styles\";\n@import \"../../styles/variables/constants\";\n\n$transition-out: ease-in 0.1s;\n$transition-in: ease-out 0.3s;\n\n@mixin createButton($shadow-color, $text-color) {\n  background-color: $shadow-color;\n  color: $text-color;\n  box-shadow: 0px 2px 5px $color--gray4;\n  &:hover,\n  &:focus {\n    box-shadow: 0px 4px 12px $color--gray4;\n  }\n  &:disabled {\n    cursor: not-allowed;\n    background-color: $color--disabled3;\n    box-shadow: none;\n    transition: none;\n  }\n}\n.btn {\n  font-size: 12px;\n  border-radius: $border-radius;\n  padding: $button--padding;\n  font-weight: 700;\n  margin: 5px 5px;\n  cursor: pointer;\n  border: none;\n  transition: $transition-out;\n  &:hover,\n  &:focus {\n    transition: $transition-in;\n  }\n  &:focus {\n    outline: 0.1px solid $color--black;\n    outline-offset: 3px;\n    transition: $transition-in;\n  }\n\n  &.btn--primary {\n    @include createButton($color--primary, $color--white);\n  }\n\n  &.btn--secondary {\n    @include createButton($color--secondary, $color--white);\n  }\n\n  &.btn--tertiary {\n    @include createButton($color--tertiary, $color--white);\n  }\n\n  &.btn--highlight {\n    @include createButton($color--highlight, $color--white);\n  }\n}\n.loading-container {\n  display: flex;\n  align-items: center;\n  margin-right: 2px;\n}\n\n.loading-text {\n  margin-left: 5px;\n}\n",
                    "styleUrl": "./base-button.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 17
            },
            "implements": [
                "OnChanges"
            ],
            "templateData": "<button\n  class=\"btn\"\n  [ngClass]=\"{\n    'btn--primary': variant === mode.PRIMARY,\n    'btn--secondary': variant === mode.SECONDARY,\n    'btn--tertiary': variant === mode.TERTIARY,\n    'btn--highlight': variant === mode.HIGHLIGHT\n  }\"\n  [attr.aria-disabled]=\"disabled ? true : null\"\n  [disabled]=\"disabled || loading\"\n  [attr.aria-label]=\"text\"\n  [title]=\"disabled ? 'Disabled' : title\"\n  [type]=\"type\"\n  (click)=\"handleOnClick()\"\n>\n  <ng-container *ngIf=\"loading; else notLoading\">\n    <div class=\"loading-container\">\n      <iu-loading-spinner\n        variant=\"disabled\"\n        id=\"button-loading-spinner\"\n      ></iu-loading-spinner>\n      <span class=\"loading-text\">Loading...</span>\n    </div>\n  </ng-container>\n  <ng-template #notLoading>{{ text }}</ng-template>\n</button>\n<p *ngIf=\"disabled && disabledMessage\">\n  {{ disabledMessage }}\n</p>\n"
        },
        {
            "name": "InstantUiLibraryComponent",
            "id": "component-InstantUiLibraryComponent-d89091723ec6313f839b2bf662e16fafd941e2d3fa7546256470a22d1232453633999dbe1b46cc5cd1e72dac2167eae9df7fdb8d0772ab0fac48a133ee4cb170",
            "file": "projects/instant-ui-library/src/lib/root/instant-ui-library.component.ts",
            "encapsulation": [
                "ViewEncapsulation.ShadowDom"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "iu-root",
            "styleUrls": [
                "../styles/_global.styles.scss"
            ],
            "styles": [],
            "template": "<ng-content></ng-content>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'iu-root',\n  template: `<ng-content></ng-content> `,\n  styleUrls: ['../styles/_global.styles.scss'],\n  encapsulation: ViewEncapsulation.ShadowDom,\n})\nexport class InstantUiLibraryComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"./variables\";\n",
                    "styleUrl": "../styles/_global.styles.scss"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "LoadingSpinnerComponent",
            "id": "component-LoadingSpinnerComponent-6ac4db6571095a1e271f441987ea89bf849398e76479bb47524f7c4c4b93dd7f3fa1f95f42a2af51631295f346ac7a3e2b8f2b17198b1885795af6c8ab925cd1",
            "file": "projects/instant-ui-library/src/lib/loading-spinner/loading-spinner/loading-spinner.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "iu-loading-spinner[id]",
            "styleUrls": [
                "./loading-spinner.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./loading-spinner.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "variant",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "ModeType",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "mode",
                    "defaultValue": "Mode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "spinner",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'spinner'"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnInit,\n  SimpleChanges,\n  ViewChild,\n} from '@angular/core';\nimport { ModeType } from '../../shared/models/color.model';\nimport { Mode } from './../../shared/models/color.model';\n\n@Component({\n  selector: 'iu-loading-spinner[id]',\n  templateUrl: './loading-spinner.component.html',\n  styleUrls: ['./loading-spinner.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LoadingSpinnerComponent implements OnChanges, AfterViewInit {\n  @Input() variant: ModeType;\n  @Input() size: number;\n  @Input() id: string;\n  @ViewChild('spinner') spinner: ElementRef;\n\n  mode = Mode;\n\n  ngAfterViewInit(): void  {\n    const loadingSpinner = this.spinner.nativeElement as HTMLDivElement;\n    let spinnerSize = 10;\n    if(this.size){\n      spinnerSize = this.size;\n    }\n    loadingSpinner.style.setProperty('height', `${spinnerSize}px`);\n    loadingSpinner.style.setProperty('width', `${spinnerSize}px`);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if(changes['id']){\n      this.id = changes['id'].currentValue;\n    }\n    if (changes['variant']) {\n      this.variant = changes['variant'].currentValue;\n    }\n\n    if (changes['size']) {\n      this.size = changes['size'].currentValue;\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../styles/global.styles\";\n@import \"../../styles/variables/constants\";\n\n\n@mixin setSpinnerSize($spinner-size) {\n  width: $spinner-size;\n  height: $spinner-size;\n}\n\n@mixin setSpinnerColor($spinner-color) {\n  border-top: 3px solid $spinner-color;\n}\n.spinner {\n  border: 3px solid $color--gray1;\n  border-radius: 50%;\n  animation: spin 2s linear infinite;\n\n  &.spinner--primary {\n    @include setSpinnerColor($color--primary);\n  }\n\n  &.spinner--secondary {\n    @include setSpinnerColor($color--secondary);\n  }\n\n  &.spinner--tertiary {\n    @include setSpinnerColor($color--tertiary);\n  }\n\n  &.spinner--highlight {\n    @include setSpinnerColor($color--highlight);\n  }\n\n  &.spinner--disabled {\n    @include setSpinnerSize(10px);\n    @include setSpinnerColor($color--gray4);\n  }\n}\n\n@keyframes spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n\n/* stylelint-disable at-rule-no-vendor-prefix */\n@-webkit-keyframes spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n",
                    "styleUrl": "./loading-spinner.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnChanges",
                "AfterViewInit"
            ],
            "templateData": "<div\n  #spinner\n  id=\"spinner-{{ id }}\"\n  class=\"spinner\"\n  [ngClass]=\"{\n    'spinner--primary': !variant || variant === mode.PRIMARY,\n    'spinner--secondary': variant === mode.SECONDARY,\n    'spinner--tertiary': variant === mode.TERTIARY,\n    'spinner--highlight': variant === mode.HIGHLIGHT,\n    'spinner--disabled': variant === mode.DISABLED\n  }\"\n></div>\n"
        },
        {
            "name": "TextAreaComponent",
            "id": "component-TextAreaComponent-2c7200478ce747b9f3c487f8efb42d00b938635aa2986a04bea34a56152ef4f17b3051ae8e6ca82a146ca01b32366f13bd34355d2612ba635b8de84120ad7a6f",
            "file": "projects/instant-ui-library/src/lib/input/text-area/text-area/text-area.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "iu-text-area",
            "styleUrls": [
                "./text-area.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./text-area.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'iu-text-area',\n  templateUrl: './text-area.component.html',\n  styleUrls: ['./text-area.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TextAreaComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./text-area.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>text-area works!</p>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-c3fb483bbded1d0ede34faffc4e342e0e90e9b042f5684b48f0a113476420da13f0e5453cac167792c6d26f7512df4c3bcab2e80b930603d64b6138799dfc469",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/instant-ui-showcase/src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { InstantUiLibraryModule } from 'projects/instant-ui-library/src/lib/root/instant-ui-library.module';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { ButtonModule } from 'projects/instant-ui-library/src/lib/button/button.module';\nimport { LoadingSpinnerModule } from 'projects/instant-ui-library/src/lib/loading-spinner/loading-spinner.module';\nimport { TextAreaModule } from 'projects/instant-ui-library/src/lib/input/text-area/text-area.module';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    InstantUiLibraryModule,\n    ButtonModule,\n    LoadingSpinnerModule,\n    TextAreaModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ButtonModule"
                        },
                        {
                            "name": "InstantUiLibraryModule"
                        },
                        {
                            "name": "LoadingSpinnerModule"
                        },
                        {
                            "name": "TextAreaModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "BaseButtonModule",
            "id": "module-BaseButtonModule-cf9c9519415a57f69ef9b2fad21c6b07c3fe376b2686f32028afc05a5a7fcbcc169a2ba2d2a94d52b8c862ab7676d73f5784c536bbc7ef51d9d0f1aa03a56425",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/instant-ui-library/src/lib/button/base-button/base-button.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BaseButtonComponent } from './base-button.component';\nimport { LoadingSpinnerModule } from '../../loading-spinner/loading-spinner.module';\n\n@NgModule({\n  declarations: [BaseButtonComponent],\n  imports: [CommonModule, LoadingSpinnerModule],\n  exports: [BaseButtonComponent],\n})\nexport class BaseButtonModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "BaseButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "LoadingSpinnerModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "BaseButtonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ButtonModule",
            "id": "module-ButtonModule-dad0aaac585d011229098339aec53d31c5b9d9814f32411edb70100cb8ffab1a74c5546a278e6b4b24b60b62b9dc912aeadca05c7cb1bc64c988bdd2c3ebc440",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/instant-ui-library/src/lib/button/button.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BaseButtonModule } from './base-button/base-button.module';\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule],\n  exports: [BaseButtonModule],\n})\nexport class ButtonModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "BaseButtonModule"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "InputModule",
            "id": "module-InputModule-0cbbb1bc35e9e042cf9c08b1f3312168293755cf83caf8c5583af1b7c4c388bf20f9f1d4cafa8db37343d21babbce9cd1b2208ecf4675f2d9bb21acb534030ff",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/instant-ui-library/src/lib/input/input.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TextAreaModule } from './text-area/text-area.module';\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule],\n  exports: [TextAreaModule],\n})\nexport class InputModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "TextAreaModule"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "InstantUiLibraryModule",
            "id": "module-InstantUiLibraryModule-bba1436a850ae5691b93d7ba5bf3c707eafa2a869df8049a3d9103db555c583b37092530e85fed8338aecec599c2c0dd5eac62d9adb07d64101b2a2ace1935a5",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/instant-ui-library/src/lib/root/instant-ui-library.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { InstantUiLibraryComponent } from './instant-ui-library.component';\n\n@NgModule({\n  declarations: [InstantUiLibraryComponent],\n  imports: [],\n  exports: [InstantUiLibraryComponent],\n})\nexport class InstantUiLibraryModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "InstantUiLibraryComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "InstantUiLibraryComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "LoadingSpinnerModule",
            "id": "module-LoadingSpinnerModule-25420516a31838d97c32ef7528b34ce5ac5dbf8fef779bc2d428e1b2d863b2720ed607a3ea38bdc9a01c2ee403ff5c643c86779a5602a52a870f6b5191beddb1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/instant-ui-library/src/lib/loading-spinner/loading-spinner.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoadingSpinnerComponent } from './loading-spinner/loading-spinner.component';\n\n@NgModule({\n  declarations: [LoadingSpinnerComponent],\n  imports: [CommonModule],\n  exports: [LoadingSpinnerComponent],\n})\nexport class LoadingSpinnerModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "LoadingSpinnerComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "LoadingSpinnerComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TextAreaModule",
            "id": "module-TextAreaModule-4f048bb7417214b9f2ba7d3389738a392a093c18c0afc38869ba37a539801dd00a06ad7061a5705f55117e69c5270cfd4e58843efb6e99b307bdbe222eee57ba",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/instant-ui-library/src/lib/input/text-area/text-area.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TextAreaComponent } from './text-area/text-area.component';\n\n@NgModule({\n  declarations: [TextAreaComponent],\n  imports: [CommonModule],\n  exports: [TextAreaComponent],\n})\nexport class TextAreaModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "TextAreaComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "TextAreaComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/instant-ui-showcase/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/instant-ui-library/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "convertPixelToRem",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/instant-ui-library/src/lib/shared/functions/pixel-converter.function.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(pixel: number): string => {\n  return `${(pixel * 0.0625).toFixed(4)}rem`;\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/instant-ui-showcase/src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true,\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/instant-ui-showcase/src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false,\n}"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/instant-ui-showcase/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/instant-ui-library/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "ModeType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"primary\" | \"secondary\" | \"tertiary\" | \"highlight\" | \"disabled\"",
                "file": "projects/instant-ui-library/src/lib/shared/models/color.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            }
        ],
        "enumerations": [
            {
                "name": "Mode",
                "childs": [
                    {
                        "name": "PRIMARY",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "primary"
                    },
                    {
                        "name": "SECONDARY",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "secondary"
                    },
                    {
                        "name": "TERTIARY",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "tertiary"
                    },
                    {
                        "name": "HIGHLIGHT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "highlight"
                    },
                    {
                        "name": "DISABLED",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "disabled"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "projects/instant-ui-library/src/lib/shared/models/color.model.ts"
            }
        ],
        "groupedVariables": {
            "projects/instant-ui-showcase/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/instant-ui-showcase/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/instant-ui-showcase/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "projects/instant-ui-library/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/instant-ui-library/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/instant-ui-library/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "projects/instant-ui-library/src/lib/shared/functions/pixel-converter.function.ts": [
                {
                    "name": "convertPixelToRem",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/instant-ui-library/src/lib/shared/functions/pixel-converter.function.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(pixel: number): string => {\n  return `${(pixel * 0.0625).toFixed(4)}rem`;\n}"
                }
            ],
            "projects/instant-ui-showcase/src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/instant-ui-showcase/src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true,\n}"
                }
            ],
            "projects/instant-ui-showcase/src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/instant-ui-showcase/src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false,\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {
            "projects/instant-ui-library/src/lib/shared/models/color.model.ts": [
                {
                    "name": "Mode",
                    "childs": [
                        {
                            "name": "PRIMARY",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "primary"
                        },
                        {
                            "name": "SECONDARY",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "secondary"
                        },
                        {
                            "name": "TERTIARY",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "tertiary"
                        },
                        {
                            "name": "HIGHLIGHT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "highlight"
                        },
                        {
                            "name": "DISABLED",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "disabled"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "projects/instant-ui-library/src/lib/shared/models/color.model.ts"
                }
            ]
        },
        "groupedTypeAliases": {
            "projects/instant-ui-library/src/lib/shared/models/color.model.ts": [
                {
                    "name": "ModeType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"primary\" | \"secondary\" | \"tertiary\" | \"highlight\" | \"disabled\"",
                    "file": "projects/instant-ui-library/src/lib/shared/models/color.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "projects/instant-ui-library/src/lib/button/base-button/base-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BaseButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "projects/instant-ui-library/src/lib/input/text-area/text-area/text-area.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextAreaComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/instant-ui-library/src/lib/loading-spinner/loading-spinner/loading-spinner.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoadingSpinnerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/instant-ui-library/src/lib/root/instant-ui-library.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InstantUiLibraryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/instant-ui-library/src/lib/root/instant-ui-library.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "InstantUiLibraryService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/instant-ui-library/src/lib/shared/functions/pixel-converter.function.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "convertPixelToRem",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/instant-ui-library/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/instant-ui-library/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/instant-ui-showcase/src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/instant-ui-showcase/src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/instant-ui-showcase/src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/instant-ui-showcase/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/instant-ui-showcase/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}